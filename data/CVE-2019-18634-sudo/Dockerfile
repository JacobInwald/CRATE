#syntax=docker/dockerfile:1
FROM ubuntu:noble
WORKDIR /home/
ENV DEBIAN_FRONTEND='noninteractive'

# Install core dependencies
RUN apt update -y
RUN apt upgrade -y
RUN apt-get -y update && apt-get -y install --no-install-recommends \ 
    git \
    cmake \
    build-essential \
    libxml2-dev \
    zsh \
    meson \
    ninja-build \
    wget \
    ca-certificates

# Intel SDE for unsupported CPUs
ENV SDE_VERSION="9.48.0-2024-11-25-lin"
RUN wget https://downloadmirror.intel.com/843185/sde-external-${SDE_VERSION}.tar.xz && \
    tar -xvf sde-external-${SDE_VERSION}.tar.xz && \
    rm -rf sde-external-${SDE_VERSION}.tar.xz && \
    mv sde-external-${SDE_VERSION} sde


# ----------------- SETUP SOURCE ---------------

# Add source code 

RUN apt-get install -y gcc-9

RUN wget https://www.sudo.ws/dist/sudo-1.8.25.tar.gz && \
  tar -xvf *.tar.gz && \
  rm *.tar.gz && \
  mv sudo-1.8.25 sudo && \
  cd sudo && \
  ./configure --prefix=/usr \
              --libexecdir=/usr/lib

# Instrument build file to allow for hardening culpable file
ADD Makefile.patch ./
RUN patch sudo/src/Makefile < Makefile.patch

# ------------- ADD EXPLOIT -------------
RUN useradd -m -u 1500 user -s /usr/bin/bash
RUN sh -c "printf 'password\npassword\n' | passwd user"

USER user
ADD exploit.sh /home/user/
USER root
RUN chmod +x /home/user/exploit.sh
RUN chown user /home/user/exploit.sh

ADD sudoers /etc/sudoers

# ---------------- ADD DEMO ----------------
ADD demo-exploit.sh ./
RUN chmod +x demo-exploit.sh
ENV HARDEN_FLAGS=""
