#syntax=docker/dockerfile:1
FROM ubuntu:noble
WORKDIR /home/


# Install core dependencies
RUN apt-get -y update && apt-get -y install --no-install-recommends \ 
    git \
    cmake \
    build-essential \
    libxml2-dev \
    sudo \ 
    zsh \
    meson \
    ninja-build \
    wget \
    ca-certificates

# Intel SDE for unsupported CPUs
ENV SDE_VERSION="9.48.0-2024-11-25-lin"
RUN wget https://downloadmirror.intel.com/843185/sde-external-${SDE_VERSION}.tar.xz && \
    tar -xvf sde-external-${SDE_VERSION}.tar.xz && \
    rm -rf sde-external-${SDE_VERSION}.tar.xz && \
    mv sde-external-${SDE_VERSION} sde


# ----------------- SETUP SOURCE ---------------

# Install source code dependencies
RUN apt-get -y install \
  automake ncurses-dev

# Add source code 
RUN wget https://git.savannah.gnu.org/cgit/screen.git/snapshot/screen-v.4.9.0.tar.gz && \
  tar -xvf screen-v.4.9.0.tar.gz && \
  rm -rf *.tar.gz && \
  mv screen-v.4.9.0 screen

RUN cd screen/src && \
  ./autogen.sh && \
  ./configure && \
  make -j64 && \
  sudo make install

# Instrument build file to allow for hardening culpable file
ADD Makefile.patch ./
RUN patch screen/src/Makefile < Makefile.patch 

# ------------- ADD EXPLOIT -------------

RUN apt-get install -y \
  python3

RUN useradd user -s /bin/bash

ADD sighup_listen.py ./
RUN chmod +x sighup_listen.py

ADD exploit.py ./
RUN chmod +x exploit.py
RUN chown user exploit.py

# ---------------- ADD DEMO ----------------
ADD demo-exploit.sh ./
RUN chmod +x demo-exploit.sh
ENV HARDEN_FLAGS=""
