
tmp_dir="tmp"


#---
## Taxonomy of Buffer Overflows Build function.
## 	:param $1 : file name, example being data/taxonomy/115-v1.0.0/src/basic-00001-large.c
##  :param $2 : flags, example being -fstackprotector-all
##  example ; `tax build ./data/taxonomy/115-v1.0.0/src/basic-00001-large.c -fstack-protector-all`
#---
function build() {
  # checks if the file name is empty
  if [ -z "$1" ]; then
	echo "Usage: build <file> <flags: str>?"
	return
  fi

  # gets the base name of the file
  dir_name=$(dirname $1)
  base_name=${1##*/}
  base_name=${base_name%.*}
  mkdir -p $tmp_dir

  if [ -z "$2" ]; then 
    gcc $1 -o "$tmp_dir/$base_name" 
    return
  fi
  
  
  gcc  "$2" $1 -o "$tmp_dir/$base_name" 
}

#---
## Taxonomy of Buffer Overflows Run function.
##   :param $1 : file name, basic-00001-large
#---
function run() {
  if [ -z "$1" ]; then
	echo "Usage: run <file>"
	return
  fi
  base_name=${1##*/}
  base_name=${base_name%.*}

  ./"$tmp_dir/$base_name"
  echo $?
}


#---
## Taxonomy of Buffer Overflows Build and Run function.
#---
function build_run() {
  if [ -z "$1" ]; then
  echo "Usage: build_run <file>"
  return
  fi

  build $1 $2
  run $1
}


#---
## Taxonomy of Buffer Overflows Clean function.
#---
function clean() {
  rm -rf $tmp_dir
}


#---
## Taxonomy of Buffer Overflows Help function.
#---
function help() {
  echo "Usage: tax <command> <file>"
  echo "Commands:"
  echo "  build <file> <flags: str>? : Build the file"
  echo "  run <file> : Run the file"
  echo "  build_run <file> : Build and Run the file"
  echo "  clean : Clean the temp directory"
}


#---
## Runs though build, run and clean, prints a value of 1 if it passes and 0 if it fails
#---
function check() {
  if [ -z "$1" ]; then
  echo "Usage: check <file> <flags: str>"
  return
  fi

  build $1 $2
  run $1
  clean

}




"$@"
