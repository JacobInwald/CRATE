#---
## Taxonomy of Buffer Overflows Build function.
## 	:param $1 : file name, example being data/taxonomy/115-v1.0.0/src/basic-00001-large.c
#---
function build() {
  if [ -z "$1" ]; then
	echo "Usage: build <file>"
	return
  fi
  base_name=${1##*/}
  base_name=${base_name%.*}
  gcc -I src/include -fsanitize=bounds -c $1  -o ".temp/$base_name.o" 
  gcc -I src/include -fsanitize=bounds ".temp/$base_name.o" -o ".temp/$base_name" 
}

#---
## Taxonomy of Buffer Overflows Run function.
##   :param $1 : file name, basic-00001-large
#---
function run() {
  if [ -z "$1" ]; then
	echo "Usage: run <file>"
	return
  fi
  base_name=${1##*/}
  base_name=${base_name%.*}
  ./".temp/$base_name"
}

#---
## Taxonomy of Buffer Overflows Build and Run function.
##   :param $1 : file name, example being data/taxonomy/115-v1.0.0/src/basic-00001-large.c
#---
function build_run() {
  if [ -z "$1" ]; then
  echo "Usage: build_run <file>"
  return
  fi
  build $1
  run $1
}

#---
## Taxonomy of Buffer Overflows Clean function.
#---
function clean() {
  rm -rf .temp/*
}

#---
## Taxonomy of Buffer Overflows Help function.
#---
function help() {
  echo "Usage: tax <command> <file>"
  echo "Commands:"
  echo "  build <file> : Build the file"
  echo "  run <file> : Run the file"
  echo "  build_run <file> : Build and Run the file"
  echo "  clean : Clean the temp directory"
}

"$@"
